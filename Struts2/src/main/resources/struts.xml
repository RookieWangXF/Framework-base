<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" "http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>

	<!--
		package
		1. name 为了处理同一个Web应用中包含同名的Action的情况。
		2. namespace 设置为URL当中的 命名空间+Action名
	-->
	<!--
		action
		1. name 用来指定所处理的请求的URl。
			1.1 可以使用通配符设计name  name="*action"
		2. method 设置处理的方法，是动态调用的。因此可以对一个action类编写多个<action>，只要name不一致就可以，使用不同的method进行处理
		3.
	-->

	<!--
		result
		1. name 该属性指定所配置的逻辑视图名
		2. type 该属性指定结果类型
			2.1 默认是dispatcher是将请求转发，redirect是请求重定向到指定资源，重定向会丢失所有的请求参数、属性。
			2.2 redirectAction 重新生成一个新的请求，重定向到某一个action来处理。
		global-results

	-->
	<package name="default" extends="struts-default">

		<global-exception-mappings>
			<exception-mapping exception="java.io.IOException" result="io">
			</exception-mapping>
		</global-exception-mappings>
		<!--
			设置一个默认的action，当找不到请求处理的时候，默认使用这个
			<default-action-ref name="index" />
		-->

		<!-- If no class attribute is specified the framework will assume success and
        render the result index.jsp -->
		<!-- If no name value for the result node is specified the success value is the default -->

		<!-- If the URL is hello.action the call the execute method of class HelloWorldAction.
		If the result returned by the execute method is success render the HelloWorld.jsp -->
		<action name="hello" class="cn.rookie.action.HelloAction" method="execute">
			<result name="success">/login.jsp</result>
		</action>


		<action name="MyAction" class="cn.rookie.action.MyAction">
			<result>/WEB_INF/content/welcome.jsp</result>
		</action>

		<!--
			异常处理机制
			1. exception-mapping

			exception: 指定异常类型
			result： 当出现异常的时候，指定对应的逻辑视图名称
		-->

		<action name="exception" class="cn.rookie.action.ExceptionAction">
			<exception-mapping exception="java.sql.SQLException" result="sql"/>
			<result name="sql">/error.jsp</result>
			<result name="io">/error.jsp</result>
		</action>


	</package>




</struts>