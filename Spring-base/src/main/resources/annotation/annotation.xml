<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--标注为普通的Bean类
        1. @Component
        2. @Controller
        3. @Service
        4. @Repository

        默认名称就是类名的首字母小写，也可以@Component("axe")  指定名称
        子标签，用于指定路径下的文件满足其中的规则也可以被指定为Bean类，定义了四种过滤器
        1. include-filter
        2. exclude-filter  不被指定为Bean类

        指定Bean类的作用域 @Scope("prototype")
    -->
    <!--
        1. @Resource  == ref指定的内容   <property name="" value=""></property>  默认值就是变量值
        2. 生命周期的注解 @PostConstruct==init-method  @PreDestroy==destroy-method
        3. @DependsOn 强制初始化其他Bean   @Lazy 指定Bean是否初始化
    -->

    <!--
        1. 自动装配 @Autowired 可以修饰setter(默认采用byType方式) 普通方法 实例变量 构造器
        注：byType 即是属于同一类型，只有在只有一个这种类型的时候才可以找到。若有多个就会出现问题。
        修饰方法时候，可以找到多个参数的匹配类型
        修饰变量的时候，也可以找这个变量对应的bean类
        2. 精确装配 @Qualifier 指定bean的名称
    -->

    <!-- 开启注解扫描 -->
    <context:component-scan base-package="cn.rookie.annotation" />
</beans>
